global
    maxconn             <%= node['haproxy']['global_max_connections'] %>
    nbproc              1
    user                <%= node['haproxy']['user'] %>
    group               <%= node['haproxy']['group'] %>
<% if node['haproxy']['enable_stats_socket'] -%>
    stats socket <%= node['haproxy']['stats_socket_path'] %>
<% end -%>

defaults
    timeout connect     <%= node['haproxy']['defaults_timeouts']['connect'] %>
    timeout queue       5s
    timeout server      <%= node['haproxy']['defaults_timeouts']['server'] %>
    timeout tunnel      1h
    timeout client      <%= node['haproxy']['defaults_timeouts']['client'] %>
    balance             <%= node['haproxy']['balance_algorithm'] %>

frontend www
    bind                <%= node['haproxy']['frontend_www_address'] %>:<%= node['haproxy']['frontend_www_port'] %>
    mode                http
    timeout client      5s
    redirect            scheme https if !{ ssl_fc }

frontend wwws
    bind                <%= node['haproxy']['frontend_wwws_address'] %>:<%= node['haproxy']['frontend_wwws_port'] %> ssl crt <%= node['haproxy']['frontend_wwws_cert'] %>
    timeout client      1h
    default_backend     www_backend

    acl                 is_websocket hdr(Upgrade) -i Websocket
    use_backend         websocket_backend if is_websocket


backend www_backend
    mode                http
    option forwardfor
    reqadd              x-forwarded-proto:\ https

<% node['haproxy']['www_backends'].each do |backend| -%>
    server              <%= backend %>
<% end -%>

backend websocket_backend
    mode                http
    option forwardfor
    option http-server-close
    option forceclose
    no option httpclose

<% node['haproxy']['websocket_backends'].each do |backend| -%>
    server              <%= backend %>
<% end -%>

<% if node['haproxy']['enable_admin'] -%>
listen admin <%= node['haproxy']['admin']['address_bind'] %>:<%= node['haproxy']['admin']['port'] %>
  mode http
  stats uri /
<% end -%>
